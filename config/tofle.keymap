/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0;
#define UPE 1;
#define MSC 2;
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 5

&left_encoder { steps = <48>; };

&right_encoder { steps = <48>; };

&sensors { triggers-per-rotation = <12>; };

&msc { acceleration-exponent = <1>; };

/ {
    macros {
        nha: nha {
            compatible = "zmk,behavior-macro";
            label = "NHA";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp A>;
        };

        nho: nho {
            compatible = "zmk,behavior-macro";
            label = "NHO";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp O>;
        };

        adpin: adpin {
            compatible = "zmk,behavior-macro";
            label = "ADPIN";
            #binding-cells = <0>;
            bindings = <&kp N7 &kp N9 &kp N4 &kp N5 &kp N1 &kp N7>;
        };
    };

    behaviors {
        scroll_encoder: scroll_encoder {
            label = "SCROLL_ENCODER";
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_UP>, <&msc MOVE_DOWN>;

            tap-ms = <50>;
        };

        rc_lt: right_click_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&mkp>;
        };

        horscroll: horscroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "HORSCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_LEFT>, <&msc MOVE_RIGHT>;

            tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        display-name = "DEFAULT";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC     &kp N1  &kp N2        &kp N3    &kp N4  &kp N5                                   &kp N6   &kp N7         &kp N8     &kp N9             &kp N0    &kp EQUAL      &kp KP_N7     &kp KP_N8  &kp KP_N9        &mt KP_NUMLOCK PLUS
&kp TAB     &kp Q   &kp W         &kp E     &kp R   &kp T                                    &kp Y    &kp U          &kp I      &kp O              &kp P     &kp MINUS      &kp KP_N4     &kp KP_N5  &kp KP_NUMBER_6  &kp KP_MINUS
&kp LSHIFT  &kp A   &kp S         &kp D     &kp F   &kp G                                    &kp H    &kp J          &kp K      &kp L              &kp SEMI  &kp SQT        &kp KP_N1     &kp KP_N2  &kp KP_N3        &kp KP_MULTIPLY
&kp LCTRL   &kp Z   &kp X         &kp C     &kp V   &kp B      &none          &none          &kp N    &kp M          &kp COMMA  &kp DOT            &kp FSLH  &kp BACKSLASH  &kp KP_ENTER  &kp KP_N0  &kp KP_DOT       &lt 1 FSLH
                    &mt LGUI RET  &kp LALT  &mo 1   &kp SPACE  &kp LG(LA(K))  &rc_lt 2 RCLK  &kp RET  &kp BACKSPACE  &kp DEL    &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder>;
        };

        lower_layer {
            display-name = "LOWER";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1  &kp F2    &kp F3    &kp F4     &kp F5                              &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11           &trans         &trans            &trans        &trans
&trans     &trans  &kp HOME  &kp UP    &kp END    &kp PAGE_UP                         &trans     &trans    &trans           &nho       &trans    &kp LEFT_BRACKET  &trans         &kp C_PLAY_PAUSE  &trans        &trans
&trans     &nha    &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN                       &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE          &trans         &trans            &trans        &trans
&trans     &trans  &trans    &trans    &trans     &trans         &trans       &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans            &kp BACKSPACE  &trans            &kp KP_COMMA  &trans
                   &trans    &trans    &trans     &trans         &bootloader  &trans  &trans     &trans    &trans           &adpin
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_encoder>;
        };

        raise_layer {
            display-name = "RAISED";

            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &ext_power EP_TOG  &trans    &trans    &trans       &trans   &kp F12   &trans  &trans  &trans  &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                        &kp PG_UP          &trans    &kp UP    &trans       &kp N0   &trans    &trans  &trans  &trans  &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                      &kp PG_DN          &kp LEFT  &kp DOWN  &kp RIGHT    &kp DEL  &kp BSPC  &trans  &trans  &trans  &trans
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans  &trans  &trans             &trans    &trans    &trans       &trans   &trans    &trans  &trans  &trans  &trans
                          &trans        &trans        &trans        &trans        &trans  &trans  &trans             &trans    &trans    &bootloader
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&horscroll>;
        };
    };
};
